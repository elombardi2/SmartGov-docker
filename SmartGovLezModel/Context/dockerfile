FROM ubuntu:18.04

# update packages list
ARG DEBIAN_FRONTEND=noninteractive
RUN apt update && apt update -y

RUN apt install -y git wget sudo tree
RUN apt install -y openjdk-8-jdk
RUN java -version
RUN apt install -y python3 python3-pip

### Create and configure an ad-hoc user1 user 
# Create 'user1' user with passwd 'govsmart'
RUN adduser --disabled-password --gecos "" user1 \
    && adduser user1 sudo \
    && echo 'user1:govsmart' | chpasswd

# Set user1 home directory
ENV HOME /home/user1
WORKDIR $HOME

# Setup user1 default session environment
USER user1
RUN cd $HOME && cp /etc/skel/.[bp]* .

# Install and build SmartGovLezModel
RUN git clone https://github.com/smartgov-liris/SmartGovLezModel
RUN cd ~/SmartGovLezModel \
    && ./gradlew build

# Install the Osmosis tool (to filter data from an Open Street Map file) 
RUN git clone git://github.com/openstreetmap/osmosis.git 
RUN cd osmosis \
    && ./gradlew assemble
ENV OSMOSIS $HOME/osmosis/package/bin/osmosis

# Collect some public OSM data of the City of Lyon and pre-treat it with osmosis
WORKDIR $HOME/SmartGovLezModel
RUN wget http://download.geofabrik.de/europe/france/rhone-alpes-latest.osm.bz2
# Instead of bunziping and then having to remove the unzipped file after usage,
# we could use something like
#    bzcat with `osmosis -file=-` 
# but this sometimes (memory footprint?) oddly fails when running in a container 
RUN bunzip2 rhone-alpes-latest.osm.bz2
RUN $OSMOSIS --read-xml                  \
             enableDateParsing=no        \
             file=rhone-alpes-latest.osm \
             --bounding-box top=46.146 left=4.4 bottom=45.43 right=5.46 \
             --tf accept-ways highway=*  \
             --used-node                 \
             --write-xml lyon.osm
RUN rm -f rhone-alpes-latest.osm  

# Documentation recommends the usage of `-Xmx<size>` in order to avoid
# JVM crashes due to lack of memory, producing memory errors e.g.
#   "java.lang.OutOfMemoryError: GC overhead limit exceeded" 
ENV LEZMODEL java -Xmx6g -jar $HOME/SmartGovLezModel/SmartGovLez-MASTER.jar

# All the simulations will be based on the same road network. The data
# can thus be prepared once and for all simulations and thus this roads
# extraction can be done in the containter.
# Starting with the above OSM file, generate roads (nodes and ways) 
# that are later required by the simulation
RUN $LEZMODEL roads \
    -f ./lyon.osm                          \
    -n ./input/osm/simturb_nodes.json      \
    -w ./input/osm/simturb_ways.json

# Install Keras and Tensorflow
RUN pip3 install --upgrade pip \
    && python3 -m pip install -r $HOME/SmartGovLezModel/extsrc/requirements.txt

# Setup entry point
WORKDIR $HOME/
COPY entrypoint.sh ./entrypoint.sh
ENTRYPOINT [ "./entrypoint.sh" ] 
